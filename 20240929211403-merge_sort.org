:PROPERTIES:
:ID:       1cbf7867-8a31-48ce-a944-b4eb503916c8
:END:
#+title: Merge Sort
#+filetags: search_n_sort algorithm

* Python Implementation
#+begin_src python
def merge_sort(arr):
    if len(arr) > 1:
        left_arr = arr[:len(arr)//2]
        right_arr = arr[len(arr)//2:]

        merge_sort(left_arr)
        merge_sort(right_arr)

        i = 0  # left array index
        j = 0  # right array index
        k = 0  # merged array index
        while (i < len(left_arr)) and (j < len(right_arr)):
            if left_arr[i] < right_arr[j]:
                arr[k] = left_arr[i]
                i += 1
            else:
                arr[k] = right_arr[j]
                j += 1
            k += 1

        while i < len(left_arr):
            arr[k] = left_arr[i]
            i += 1
            k += 1

        while j < len(right_arr):
            arr[k] = right_arr[j]
            j += 1
            k += 1
#+end_src

* [[id:2606eefb-295e-4afc-8942-9bbea33f66ed][Order of Growth]]
\(T_N \sim N \log N\)

* Resources
- [[https://youtu.be/cVZMah9kEjI?si=UxajFiRSeQT7GgY-][Merge Sort In Python Explained (With Example And Code)]]
